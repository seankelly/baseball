
#[derive(Clone, Debug, RustcDecodable)]
struct RetrosheetGameLog {
    // 1
    date: String,
    number_of_game: String,
    day_of_week: String,
    visitor_team: String,
    visitor_league: String,
    visitor_team_game_number: u16,
    home_team: String,
    home_league: String,
    home_team_game_number: u16,
    // 10
    visitor_score: u16,
    home_score: u16,
    number_of_outs: Option<u8>,
    day_night: String,
    completion_info: String,
    forfeit_info: String,
    protest_info: String,
    park_id: String,
    attendance: Option<u32>,
    time_of_game: Option<u16>,
    // 20
    visitor_line_score: String,
    home_line_score: String,
    visitor_ab: Option<u8>,
    visitor_hits: Option<u8>,
    visitor_doubles: Option<u8>,
    visitor_triples: Option<u8>,
    visitor_homeruns: Option<u8>,
    visitor_rbi: Option<u8>,
    visitor_sac_hits: Option<u8>,
    visitor_sac_flies: Option<u8>,
    // 30
    visitor_hbp: Option<u8>,
    visitor_walks: Option<u8>,
    visitor_intentional_walks: Option<u8>,
    visitor_strikeouts: Option<u8>,
    visitor_stolen_bases: Option<u8>,
    visitor_caught_stealing: Option<u8>,
    visitor_gidp: Option<u8>,
    visitor_catcher_interference: Option<u8>,
    visitor_left_on_base: Option<u8>,
    visitor_pitchers_used: Option<u8>,
    // 40
    visitor_individual_earned_runs: Option<u8>,
    visitor_team_earned_runs: Option<u8>,
    visitor_wild_pitches: Option<u8>,
    visitor_balks: Option<u8>,
    visitor_putouts: Option<u8>,
    visitor_assists: Option<u8>,
    visitor_errors: Option<u8>,
    visitor_passed_balls: Option<u8>,
    visitor_double_plays: Option<u8>,
    visitor_triple_plays: Option<u8>,
    // 50
    home_ab: Option<u8>,
    home_hits: Option<u8>,
    home_doubles: Option<u8>,
    home_triples: Option<u8>,
    home_homeruns: Option<u8>,
    home_rbi: Option<u8>,
    home_sac_hits: Option<u8>,
    home_sac_flies: Option<u8>,
    home_hbp: Option<u8>,
    home_walks: Option<u8>,
    // 60
    home_intentional_walks: Option<u8>,
    home_strikeouts: Option<u8>,
    home_stolen_bases: Option<u8>,
    home_caught_stealing: Option<u8>,
    home_gidp: Option<u8>,
    home_catcher_interference: Option<u8>,
    home_left_on_base: Option<u8>,
    home_pitchers_used: Option<u8>,
    home_individual_earned_runs: Option<u8>,
    home_team_earned_runs: Option<u8>,
    // 70
    home_wild_pitches: Option<u8>,
    home_balks: Option<u8>,
    home_putouts: Option<u8>,
    home_assists: Option<u8>,
    home_errors: Option<u8>,
    home_passed_balls: Option<u8>,
    home_double_plays: Option<u8>,
    home_triple_plays: Option<u8>,
    home_plate_umpire_name: String,
    home_plate_umpire_id: String,
    // 80
    first_base_umpire_name: String,
    first_base_umpire_id: String,
    second_base_umpire_name: String,
    second_base_umpire_id: String,
    third_base_umpire_name: String,
    third_base_umpire_id: String,
    left_field_umpire_name: String,
    left_field_umpire_id: String,
    right_field_umpire_name: String,
    right_field_umpire_id: String,
    // 90
    visitor_manager_name: String,
    visitor_manager_id: String,
    home_manager_name: String,
    home_manager_id: String,
    winning_pitcher_name: String,
    winning_pitcher_id: String,
    losing_pitcher_name: String,
    losing_pitcher_id: String,
    saving_pitcher_name: String,
    saving_pitcher_id: String,
    // 100
    gwrbi_player_name: String,
    gwrbi_player_id: String,
    visitor_starter_name: String,
    visitor_starter_id: String,
    home_starter_name: String,
    home_starter_id: String,
    visitor_1_id: String,
    visitor_1_name: String,
    visitor_1_pos: String,
    visitor_2_id: String,
    // 110
    visitor_2_name: String,
    visitor_2_pos: String,
    visitor_3_id: String,
    visitor_3_name: String,
    visitor_3_pos: String,
    visitor_4_id: String,
    visitor_4_name: String,
    visitor_4_pos: String,
    visitor_5_id: String,
    visitor_5_name: String,
    // 120
    visitor_5_pos: String,
    visitor_6_id: String,
    visitor_6_name: String,
    visitor_6_pos: String,
    visitor_7_id: String,
    visitor_7_name: String,
    visitor_7_pos: String,
    visitor_8_id: String,
    visitor_8_name: String,
    visitor_8_pos: String,
    // 130
    visitor_9_id: String,
    visitor_9_name: String,
    visitor_9_pos: String,
    home_1_id: String,
    home_1_name: String,
    home_1_pos: String,
    home_2_id: String,
    home_2_name: String,
    home_2_pos: String,
    home_3_id: String,
    // 140
    home_3_name: String,
    home_3_pos: String,
    home_4_id: String,
    home_4_name: String,
    home_4_pos: String,
    home_5_id: String,
    home_5_name: String,
    home_5_pos: String,
    home_6_id: String,
    home_6_name: String,
    // 150
    home_6_pos: String,
    home_7_id: String,
    home_7_name: String,
    home_7_pos: String,
    home_8_id: String,
    home_8_name: String,
    home_8_pos: String,
    home_9_id: String,
    home_9_name: String,
    home_9_pos: String,
    // 160
    additional_info: String,
    acquistion_info: String,
}


#[derive(Clone, Debug, RustcDecodable)]
struct TeamGameLog {
    // 1
    date: String,
    number_of_game: String,
    day_of_week: String,
    team: String,
    league: String,
    team_game_number: u16,
    opponent_team: String,
    opponent_league: String,
    opponent_team_game_number: u16,
    // 10
    score: u16,
    opponent_score: u16,
    number_of_outs: Option<u8>,
    day_night: String,
    completion_info: String,
    forfeit_info: String,
    protest_info: String,
    park_id: String,
    attendance: Option<u32>,
    time_of_game: Option<u16>,
    // 20
    line_score: String,
    opponent_line_score: String,
    ab: Option<u8>,
    hits: Option<u8>,
    doubles: Option<u8>,
    triples: Option<u8>,
    homeruns: Option<u8>,
    rbi: Option<u8>,
    sac_hits: Option<u8>,
    sac_flies: Option<u8>,
    // 30
    hbp: Option<u8>,
    walks: Option<u8>,
    intentional_walks: Option<u8>,
    strikeouts: Option<u8>,
    stolen_bases: Option<u8>,
    caught_stealing: Option<u8>,
    gidp: Option<u8>,
    catcher_interference: Option<u8>,
    left_on_base: Option<u8>,
    pitchers_used: Option<u8>,
    // 40
    individual_earned_runs: Option<u8>,
    team_earned_runs: Option<u8>,
    wild_pitches: Option<u8>,
    balks: Option<u8>,
    putouts: Option<u8>,
    assists: Option<u8>,
    errors: Option<u8>,
    passed_balls: Option<u8>,
    double_plays: Option<u8>,
    triple_plays: Option<u8>,
    // 50
    opponent_ab: Option<u8>,
    opponent_hits: Option<u8>,
    opponent_doubles: Option<u8>,
    opponent_triples: Option<u8>,
    opponent_homeruns: Option<u8>,
    opponent_rbi: Option<u8>,
    opponent_sac_hits: Option<u8>,
    opponent_sac_flies: Option<u8>,
    opponent_hbp: Option<u8>,
    opponent_walks: Option<u8>,
    // 60
    opponent_intentional_walks: Option<u8>,
    opponent_strikeouts: Option<u8>,
    opponent_stolen_bases: Option<u8>,
    opponent_caught_stealing: Option<u8>,
    opponent_gidp: Option<u8>,
    opponent_catcher_interference: Option<u8>,
    opponent_left_on_base: Option<u8>,
    opponent_pitchers_used: Option<u8>,
    opponent_individual_earned_runs: Option<u8>,
    opponent_team_earned_runs: Option<u8>,
    // 70
    opponent_wild_pitches: Option<u8>,
    opponent_balks: Option<u8>,
    opponent_putouts: Option<u8>,
    opponent_assists: Option<u8>,
    opponent_errors: Option<u8>,
    opponent_passed_balls: Option<u8>,
    opponent_double_plays: Option<u8>,
    opponent_triple_plays: Option<u8>,
    home_plate_umpire_name: String,
    home_plate_umpire_id: String,
    // 80
    first_base_umpire_name: String,
    first_base_umpire_id: String,
    second_base_umpire_name: String,
    second_base_umpire_id: String,
    third_base_umpire_name: String,
    third_base_umpire_id: String,
    left_field_umpire_name: String,
    left_field_umpire_id: String,
    right_field_umpire_name: String,
    right_field_umpire_id: String,
    // 90
    manager_name: String,
    manager_id: String,
    opponent_manager_name: String,
    opponent_manager_id: String,
    winning_pitcher_name: String,
    winning_pitcher_id: String,
    losing_pitcher_name: String,
    losing_pitcher_id: String,
    saving_pitcher_name: String,
    saving_pitcher_id: String,
    // 100
    gwrbi_player_name: String,
    gwrbi_player_id: String,
    starter_name: String,
    starter_id: String,
    opponent_starter_name: String,
    opponent_starter_id: String,
    lineup_1_id: String,
    lineup_1_name: String,
    lineup_1_pos: String,
    lineup_2_id: String,
    // 110
    lineup_2_name: String,
    lineup_2_pos: String,
    lineup_3_id: String,
    lineup_3_name: String,
    lineup_3_pos: String,
    lineup_4_id: String,
    lineup_4_name: String,
    lineup_4_pos: String,
    lineup_5_id: String,
    lineup_5_name: String,
    // 120
    lineup_5_pos: String,
    lineup_6_id: String,
    lineup_6_name: String,
    lineup_6_pos: String,
    lineup_7_id: String,
    lineup_7_name: String,
    lineup_7_pos: String,
    lineup_8_id: String,
    lineup_8_name: String,
    lineup_8_pos: String,
    // 130
    lineup_9_id: String,
    lineup_9_name: String,
    lineup_9_pos: String,
    opponent_1_id: String,
    opponent_1_name: String,
    opponent_1_pos: String,
    opponent_2_id: String,
    opponent_2_name: String,
    opponent_2_pos: String,
    opponent_3_id: String,
    // 140
    opponent_3_name: String,
    opponent_3_pos: String,
    opponent_4_id: String,
    opponent_4_name: String,
    opponent_4_pos: String,
    opponent_5_id: String,
    opponent_5_name: String,
    opponent_5_pos: String,
    opponent_6_id: String,
    opponent_6_name: String,
    // 150
    opponent_6_pos: String,
    opponent_7_id: String,
    opponent_7_name: String,
    opponent_7_pos: String,
    opponent_8_id: String,
    opponent_8_name: String,
    opponent_8_pos: String,
    opponent_9_id: String,
    opponent_9_name: String,
    opponent_9_pos: String,
    // 160
    additional_info: String,
    acquistion_info: String,
}


impl RetrosheetGameLog {
    fn each_team_game(&self) -> (TeamGameLog, TeamGameLog) {
        (TeamGameLog::from_home_team(&self),
         TeamGameLog::from_visitor_team(&self))
    }
}

impl TeamGameLog {
    fn from_home_team(game: &RetrosheetGameLog) -> TeamGameLog {
        TeamGameLog {
            // 1
            date: game.date.clone(),
            number_of_game: game.number_of_game.clone(),
            day_of_week: game.day_of_week.clone(),
            team: game.home_team.clone(),
            league: game.home_league.clone(),
            team_game_number: game.home_team_game_number,
            opponent_team: game.visitor_team.clone(),
            opponent_league: game.visitor_league.clone(),
            opponent_team_game_number: game.visitor_team_game_number,
            // 10
            score: game.home_score,
            opponent_score: game.visitor_score,
            number_of_outs: game.number_of_outs,
            day_night: game.day_night.clone(),
            completion_info: game.completion_info.clone(),
            forfeit_info: game.forfeit_info.clone(),
            protest_info: game.protest_info.clone(),
            park_id: game.park_id.clone(),
            attendance: game.attendance,
            time_of_game: game.time_of_game,
            // 20
            line_score: game.home_line_score.clone(),
            opponent_line_score: game.visitor_line_score.clone(),
            ab: game.home_ab,
            hits: game.home_hits,
            doubles: game.home_doubles,
            triples: game.home_triples,
            homeruns: game.home_homeruns,
            rbi: game.home_rbi,
            sac_hits: game.home_sac_hits,
            sac_flies: game.home_sac_flies,
            // 30
            hbp: game.home_hbp,
            walks: game.home_walks,
            intentional_walks: game.home_intentional_walks,
            strikeouts: game.home_strikeouts,
            stolen_bases: game.home_stolen_bases,
            caught_stealing: game.home_caught_stealing,
            gidp: game.home_gidp,
            catcher_interference: game.home_catcher_interference,
            left_on_base: game.home_left_on_base,
            pitchers_used: game.home_pitchers_used,
            // 40
            individual_earned_runs: game.home_individual_earned_runs,
            team_earned_runs: game.home_team_earned_runs,
            wild_pitches: game.home_wild_pitches,
            balks: game.home_balks,
            putouts: game.home_putouts,
            assists: game.home_assists,
            errors: game.home_errors,
            passed_balls: game.home_passed_balls,
            double_plays: game.home_double_plays,
            triple_plays: game.home_triple_plays,
            // 50
            opponent_ab: game.visitor_ab,
            opponent_hits: game.visitor_hits,
            opponent_doubles: game.visitor_doubles,
            opponent_triples: game.visitor_triples,
            opponent_homeruns: game.visitor_homeruns,
            opponent_rbi: game.visitor_rbi,
            opponent_sac_hits: game.visitor_sac_hits,
            opponent_sac_flies: game.visitor_sac_flies,
            opponent_hbp: game.visitor_hbp,
            opponent_walks: game.visitor_walks,
            // 60
            opponent_intentional_walks: game.visitor_intentional_walks,
            opponent_strikeouts: game.visitor_strikeouts,
            opponent_stolen_bases: game.visitor_stolen_bases,
            opponent_caught_stealing: game.visitor_caught_stealing,
            opponent_gidp: game.visitor_gidp,
            opponent_catcher_interference: game.visitor_catcher_interference,
            opponent_left_on_base: game.visitor_left_on_base,
            opponent_pitchers_used: game.visitor_pitchers_used,
            opponent_individual_earned_runs: game.visitor_individual_earned_runs,
            opponent_team_earned_runs: game.visitor_team_earned_runs,
            // 70
            opponent_wild_pitches: game.visitor_wild_pitches,
            opponent_balks: game.visitor_balks,
            opponent_putouts: game.visitor_putouts,
            opponent_assists: game.visitor_assists,
            opponent_errors: game.visitor_errors,
            opponent_passed_balls: game.visitor_passed_balls,
            opponent_double_plays: game.visitor_double_plays,
            opponent_triple_plays: game.visitor_triple_plays,
            home_plate_umpire_name: game.home_plate_umpire_name.clone(),
            home_plate_umpire_id: game.home_plate_umpire_id.clone(),
            // 80
            first_base_umpire_name: game.first_base_umpire_name.clone(),
            first_base_umpire_id: game.first_base_umpire_id.clone(),
            second_base_umpire_name: game.second_base_umpire_name.clone(),
            second_base_umpire_id: game.second_base_umpire_id.clone(),
            third_base_umpire_name: game.third_base_umpire_name.clone(),
            third_base_umpire_id: game.third_base_umpire_id.clone(),
            left_field_umpire_name: game.left_field_umpire_name.clone(),
            left_field_umpire_id: game.left_field_umpire_id.clone(),
            right_field_umpire_name: game.right_field_umpire_name.clone(),
            right_field_umpire_id: game.right_field_umpire_id.clone(),
            // 90
            manager_name: game.home_manager_name.clone(),
            manager_id: game.home_manager_id.clone(),
            opponent_manager_name: game.visitor_manager_name.clone(),
            opponent_manager_id: game.visitor_manager_id.clone(),
            winning_pitcher_name: game.winning_pitcher_name.clone(),
            winning_pitcher_id: game.winning_pitcher_id.clone(),
            losing_pitcher_name: game.losing_pitcher_name.clone(),
            losing_pitcher_id: game.losing_pitcher_id.clone(),
            saving_pitcher_name: game.saving_pitcher_name.clone(),
            saving_pitcher_id: game.saving_pitcher_id.clone(),
            // 100
            gwrbi_player_name: game.gwrbi_player_name.clone(),
            gwrbi_player_id: game.gwrbi_player_id.clone(),
            starter_name: game.home_starter_name.clone(),
            starter_id: game.home_starter_id.clone(),
            opponent_starter_name: game.visitor_starter_name.clone(),
            opponent_starter_id: game.visitor_starter_id.clone(),
            lineup_1_id: game.home_1_id.clone(),
            lineup_1_name: game.home_1_name.clone(),
            lineup_1_pos: game.home_1_pos.clone(),
            lineup_2_id: game.home_2_id.clone(),
            // 110
            lineup_2_name: game.home_2_name.clone(),
            lineup_2_pos: game.home_2_pos.clone(),
            lineup_3_id: game.home_3_id.clone(),
            lineup_3_name: game.home_3_name.clone(),
            lineup_3_pos: game.home_3_pos.clone(),
            lineup_4_id: game.home_4_id.clone(),
            lineup_4_name: game.home_4_name.clone(),
            lineup_4_pos: game.home_4_pos.clone(),
            lineup_5_id: game.home_5_id.clone(),
            lineup_5_name: game.home_5_name.clone(),
            // 120
            lineup_5_pos: game.home_5_pos.clone(),
            lineup_6_id: game.home_6_id.clone(),
            lineup_6_name: game.home_6_name.clone(),
            lineup_6_pos: game.home_6_pos.clone(),
            lineup_7_id: game.home_7_id.clone(),
            lineup_7_name: game.home_7_name.clone(),
            lineup_7_pos: game.home_7_pos.clone(),
            lineup_8_id: game.home_8_id.clone(),
            lineup_8_name: game.home_8_name.clone(),
            lineup_8_pos: game.home_8_pos.clone(),
            // 130
            lineup_9_id: game.home_9_id.clone(),
            lineup_9_name: game.home_9_name.clone(),
            lineup_9_pos: game.home_9_pos.clone(),
            opponent_1_id: game.visitor_1_id.clone(),
            opponent_1_name: game.visitor_1_name.clone(),
            opponent_1_pos: game.visitor_1_pos.clone(),
            opponent_2_id: game.visitor_2_id.clone(),
            opponent_2_name: game.visitor_2_name.clone(),
            opponent_2_pos: game.visitor_2_pos.clone(),
            opponent_3_id: game.visitor_3_id.clone(),
            // 140
            opponent_3_name: game.visitor_3_name.clone(),
            opponent_3_pos: game.visitor_3_pos.clone(),
            opponent_4_id: game.visitor_4_id.clone(),
            opponent_4_name: game.visitor_4_name.clone(),
            opponent_4_pos: game.visitor_4_pos.clone(),
            opponent_5_id: game.visitor_5_id.clone(),
            opponent_5_name: game.visitor_5_name.clone(),
            opponent_5_pos: game.visitor_5_pos.clone(),
            opponent_6_id: game.visitor_6_id.clone(),
            opponent_6_name: game.visitor_6_name.clone(),
            // 150
            opponent_6_pos: game.visitor_6_pos.clone(),
            opponent_7_id: game.visitor_7_id.clone(),
            opponent_7_name: game.visitor_7_name.clone(),
            opponent_7_pos: game.visitor_7_pos.clone(),
            opponent_8_id: game.visitor_8_id.clone(),
            opponent_8_name: game.visitor_8_name.clone(),
            opponent_8_pos: game.visitor_8_pos.clone(),
            opponent_9_id: game.visitor_9_id.clone(),
            opponent_9_name: game.visitor_9_name.clone(),
            opponent_9_pos: game.visitor_9_pos.clone(),
            // 160
            additional_info: game.additional_info.clone(),
            acquistion_info: game.acquistion_info.clone(),
        }
    }

    fn from_visitor_team(game: &RetrosheetGameLog) -> TeamGameLog {
        TeamGameLog {
            // 1
            date: game.date.clone(),
            number_of_game: game.number_of_game.clone(),
            day_of_week: game.day_of_week.clone(),
            team: game.visitor_team.clone(),
            league: game.visitor_league.clone(),
            team_game_number: game.visitor_team_game_number,
            opponent_team: game.home_team.clone(),
            opponent_league: game.home_league.clone(),
            opponent_team_game_number: game.home_team_game_number,
            // 10
            score: game.visitor_score,
            opponent_score: game.home_score,
            number_of_outs: game.number_of_outs,
            day_night: game.day_night.clone(),
            completion_info: game.completion_info.clone(),
            forfeit_info: game.forfeit_info.clone(),
            protest_info: game.protest_info.clone(),
            park_id: game.park_id.clone(),
            attendance: game.attendance,
            time_of_game: game.time_of_game,
            // 20
            line_score: game.visitor_line_score.clone(),
            opponent_line_score: game.home_line_score.clone(),
            ab: game.visitor_ab,
            hits: game.visitor_hits,
            doubles: game.visitor_doubles,
            triples: game.visitor_triples,
            homeruns: game.visitor_homeruns,
            rbi: game.visitor_rbi,
            sac_hits: game.visitor_sac_hits,
            sac_flies: game.visitor_sac_flies,
            // 30
            hbp: game.visitor_hbp,
            walks: game.visitor_walks,
            intentional_walks: game.visitor_intentional_walks,
            strikeouts: game.visitor_strikeouts,
            stolen_bases: game.visitor_stolen_bases,
            caught_stealing: game.visitor_caught_stealing,
            gidp: game.visitor_gidp,
            catcher_interference: game.visitor_catcher_interference,
            left_on_base: game.visitor_left_on_base,
            pitchers_used: game.visitor_pitchers_used,
            // 40
            individual_earned_runs: game.visitor_individual_earned_runs,
            team_earned_runs: game.visitor_team_earned_runs,
            wild_pitches: game.visitor_wild_pitches,
            balks: game.visitor_balks,
            putouts: game.visitor_putouts,
            assists: game.visitor_assists,
            errors: game.visitor_errors,
            passed_balls: game.visitor_passed_balls,
            double_plays: game.visitor_double_plays,
            triple_plays: game.visitor_triple_plays,
            // 50
            opponent_ab: game.home_ab,
            opponent_hits: game.home_hits,
            opponent_doubles: game.home_doubles,
            opponent_triples: game.home_triples,
            opponent_homeruns: game.home_homeruns,
            opponent_rbi: game.home_rbi,
            opponent_sac_hits: game.home_sac_hits,
            opponent_sac_flies: game.home_sac_flies,
            opponent_hbp: game.home_hbp,
            opponent_walks: game.home_walks,
            // 60
            opponent_intentional_walks: game.home_intentional_walks,
            opponent_strikeouts: game.home_strikeouts,
            opponent_stolen_bases: game.home_stolen_bases,
            opponent_caught_stealing: game.home_caught_stealing,
            opponent_gidp: game.home_gidp,
            opponent_catcher_interference: game.home_catcher_interference,
            opponent_left_on_base: game.home_left_on_base,
            opponent_pitchers_used: game.home_pitchers_used,
            opponent_individual_earned_runs: game.home_individual_earned_runs,
            opponent_team_earned_runs: game.home_team_earned_runs,
            // 70
            opponent_wild_pitches: game.home_wild_pitches,
            opponent_balks: game.home_balks,
            opponent_putouts: game.home_putouts,
            opponent_assists: game.home_assists,
            opponent_errors: game.home_errors,
            opponent_passed_balls: game.home_passed_balls,
            opponent_double_plays: game.home_double_plays,
            opponent_triple_plays: game.home_triple_plays,
            home_plate_umpire_name: game.home_plate_umpire_name.clone(),
            home_plate_umpire_id: game.home_plate_umpire_id.clone(),
            // 80
            first_base_umpire_name: game.first_base_umpire_name.clone(),
            first_base_umpire_id: game.first_base_umpire_id.clone(),
            second_base_umpire_name: game.second_base_umpire_name.clone(),
            second_base_umpire_id: game.second_base_umpire_id.clone(),
            third_base_umpire_name: game.third_base_umpire_name.clone(),
            third_base_umpire_id: game.third_base_umpire_id.clone(),
            left_field_umpire_name: game.left_field_umpire_name.clone(),
            left_field_umpire_id: game.left_field_umpire_id.clone(),
            right_field_umpire_name: game.right_field_umpire_name.clone(),
            right_field_umpire_id: game.right_field_umpire_id.clone(),
            // 90
            manager_name: game.visitor_manager_name.clone(),
            manager_id: game.visitor_manager_id.clone(),
            opponent_manager_name: game.home_manager_name.clone(),
            opponent_manager_id: game.home_manager_id.clone(),
            winning_pitcher_name: game.winning_pitcher_name.clone(),
            winning_pitcher_id: game.winning_pitcher_id.clone(),
            losing_pitcher_name: game.losing_pitcher_name.clone(),
            losing_pitcher_id: game.losing_pitcher_id.clone(),
            saving_pitcher_name: game.saving_pitcher_name.clone(),
            saving_pitcher_id: game.saving_pitcher_id.clone(),
            // 100
            gwrbi_player_name: game.gwrbi_player_name.clone(),
            gwrbi_player_id: game.gwrbi_player_id.clone(),
            starter_name: game.visitor_starter_name.clone(),
            starter_id: game.visitor_starter_id.clone(),
            opponent_starter_name: game.home_starter_name.clone(),
            opponent_starter_id: game.home_starter_id.clone(),
            lineup_1_id: game.visitor_1_id.clone(),
            lineup_1_name: game.visitor_1_name.clone(),
            lineup_1_pos: game.visitor_1_pos.clone(),
            lineup_2_id: game.visitor_2_id.clone(),
            // 110
            lineup_2_name: game.visitor_2_name.clone(),
            lineup_2_pos: game.visitor_2_pos.clone(),
            lineup_3_id: game.visitor_3_id.clone(),
            lineup_3_name: game.visitor_3_name.clone(),
            lineup_3_pos: game.visitor_3_pos.clone(),
            lineup_4_id: game.visitor_4_id.clone(),
            lineup_4_name: game.visitor_4_name.clone(),
            lineup_4_pos: game.visitor_4_pos.clone(),
            lineup_5_id: game.visitor_5_id.clone(),
            lineup_5_name: game.visitor_5_name.clone(),
            // 120
            lineup_5_pos: game.visitor_5_pos.clone(),
            lineup_6_id: game.visitor_6_id.clone(),
            lineup_6_name: game.visitor_6_name.clone(),
            lineup_6_pos: game.visitor_6_pos.clone(),
            lineup_7_id: game.visitor_7_id.clone(),
            lineup_7_name: game.visitor_7_name.clone(),
            lineup_7_pos: game.visitor_7_pos.clone(),
            lineup_8_id: game.visitor_8_id.clone(),
            lineup_8_name: game.visitor_8_name.clone(),
            lineup_8_pos: game.visitor_8_pos.clone(),
            // 130
            lineup_9_id: game.visitor_9_id.clone(),
            lineup_9_name: game.visitor_9_name.clone(),
            lineup_9_pos: game.visitor_9_pos.clone(),
            opponent_1_id: game.home_1_id.clone(),
            opponent_1_name: game.home_1_name.clone(),
            opponent_1_pos: game.home_1_pos.clone(),
            opponent_2_id: game.home_2_id.clone(),
            opponent_2_name: game.home_2_name.clone(),
            opponent_2_pos: game.home_2_pos.clone(),
            opponent_3_id: game.home_3_id.clone(),
            // 140
            opponent_3_name: game.home_3_name.clone(),
            opponent_3_pos: game.home_3_pos.clone(),
            opponent_4_id: game.home_4_id.clone(),
            opponent_4_name: game.home_4_name.clone(),
            opponent_4_pos: game.home_4_pos.clone(),
            opponent_5_id: game.home_5_id.clone(),
            opponent_5_name: game.home_5_name.clone(),
            opponent_5_pos: game.home_5_pos.clone(),
            opponent_6_id: game.home_6_id.clone(),
            opponent_6_name: game.home_6_name.clone(),
            // 150
            opponent_6_pos: game.home_6_pos.clone(),
            opponent_7_id: game.home_7_id.clone(),
            opponent_7_name: game.home_7_name.clone(),
            opponent_7_pos: game.home_7_pos.clone(),
            opponent_8_id: game.home_8_id.clone(),
            opponent_8_name: game.home_8_name.clone(),
            opponent_8_pos: game.home_8_pos.clone(),
            opponent_9_id: game.home_9_id.clone(),
            opponent_9_name: game.home_9_name.clone(),
            opponent_9_pos: game.home_9_pos.clone(),
            // 160
            additional_info: game.additional_info.clone(),
            acquistion_info: game.acquistion_info.clone(),
        }
    }
}
