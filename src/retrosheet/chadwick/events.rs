
use crate::retrosheet::chadwick::bool_from_string;

#[derive(Deserialize, Debug)]
#[serde(rename_all = "UPPERCASE")]
pub struct Event {
	game_id: String,
	away_team_id: String,
	inn_ct: u8,
	bat_home_id: String,
	outs_ct: u8,
	balls_ct: u8,
	strikes_ct: u8,
	pitch_seq_tx: String,
	away_score_ct: u8,
	home_score_ct: u8,
	bat_id: String,
	bat_hand_cd: String,
	resp_bat_id: String,
	resp_bat_hand_cd: String,
	pit_id: String,
	pit_hand_cd: String,
	resp_pit_id: String,
	resp_pit_hand_cd: String,
	pos2_fld_id: String,
	pos3_fld_id: String,
	pos4_fld_id: String,
	pos5_fld_id: String,
	pos6_fld_id: String,
	pos7_fld_id: String,
	pos8_fld_id: String,
	pos9_fld_id: String,
	base1_run_id: String,
	base2_run_id: String,
	base3_run_id: String,
	event_tx: String,
    #[serde(deserialize_with = "bool_from_string")]
	leadoff_fl: bool,
    #[serde(deserialize_with = "bool_from_string")]
	ph_fl: bool,
	bat_fld_cd: String,
	bat_lineup_id: String,
	event_cd: String,
    #[serde(deserialize_with = "bool_from_string")]
	bat_event_fl: bool,
    #[serde(deserialize_with = "bool_from_string")]
	ab_fl: bool,
	h_fl: bool,
    #[serde(deserialize_with = "bool_from_string")]
	sh_fl: bool,
    #[serde(deserialize_with = "bool_from_string")]
	sf_fl: bool,
	event_outs_ct: u8,
    #[serde(deserialize_with = "bool_from_string")]
	dp_fl: bool,
    #[serde(deserialize_with = "bool_from_string")]
	tp_fl: bool,
	rbi_ct: u8,
    #[serde(deserialize_with = "bool_from_string")]
	wp_fl: bool,
    #[serde(deserialize_with = "bool_from_string")]
	pb_fl: bool,
	fld_cd: String,
	battedball_cd: String,
    #[serde(deserialize_with = "bool_from_string")]
	bunt_fl: bool,
    #[serde(deserialize_with = "bool_from_string")]
	foul_fl: bool,
	battedball_loc_tx: String,
	err_ct: u8,
	err1_fld_cd: String,
	err1_cd: String,
	err2_fld_cd: String,
	err2_cd: String,
	err3_fld_cd: String,
	err3_cd: String,
	bat_dest_id: String,
	run1_dest_id: String,
	run2_dest_id: String,
	run3_dest_id: String,
	bat_play_tx: String,
	run1_play_tx: String,
	run2_play_tx: String,
	run3_play_tx: String,
    #[serde(deserialize_with = "bool_from_string")]
	run1_sb_fl: bool,
    #[serde(deserialize_with = "bool_from_string")]
	run2_sb_fl: bool,
    #[serde(deserialize_with = "bool_from_string")]
	run3_sb_fl: bool,
    #[serde(deserialize_with = "bool_from_string")]
	run1_cs_fl: bool,
    #[serde(deserialize_with = "bool_from_string")]
	run2_cs_fl: bool,
    #[serde(deserialize_with = "bool_from_string")]
	run3_cs_fl: bool,
    #[serde(deserialize_with = "bool_from_string")]
	run1_pk_fl: bool,
    #[serde(deserialize_with = "bool_from_string")]
	run2_pk_fl: bool,
    #[serde(deserialize_with = "bool_from_string")]
	run3_pk_fl: bool,
	run1_resp_pit_id: String,
	run2_resp_pit_id: String,
	run3_resp_pit_id: String,
    #[serde(deserialize_with = "bool_from_string")]
	game_new_fl: bool,
    #[serde(deserialize_with = "bool_from_string")]
	game_end_fl: bool,
    #[serde(deserialize_with = "bool_from_string")]
	pr_run1_fl: bool,
    #[serde(deserialize_with = "bool_from_string")]
	pr_run2_fl: bool,
    #[serde(deserialize_with = "bool_from_string")]
	pr_run3_fl: bool,
	removed_for_pr_run1_id: String,
	removed_for_pr_run2_id: String,
	removed_for_pr_run3_id: String,
	removed_for_ph_bat_id: String,
	removed_for_ph_bat_fld_cd: String,
	po1_fld_cd: String,
	po2_fld_cd: String,
	po3_fld_cd: String,
	ass1_fld_cd: String,
	ass2_fld_cd: String,
	ass3_fld_cd: String,
	ass4_fld_cd: String,
	ass5_fld_cd: String,
	event_id: String,
}

#[derive(Deserialize, Debug)]
#[serde(rename_all = "UPPERCASE")]
pub struct EventExtended {
    home_team_id: String,
    bat_team_id: String,
    fld_team_id: String,
    bat_last_id: String,
    inn_new_fl: bool,
    inn_end_fl: bool,
    start_bat_score_ct: u8,
    start_fld_score_ct: u8,
    inn_runs_ct: u8,
    game_pa_ct: u8,
    inn_pa_ct: u8,
    pa_new_fl: bool,
    pa_trunc_fl: bool,
    start_bases_cd: String,
    end_bases_cd: String,
    bat_start_fl: bool,
    resp_bat_start_fl: bool,
    bat_on_deck_id: String,
    bat_in_hold_id: String,
    pit_start_fl: bool,
    resp_pit_start_fl: bool,
    run1_fld_cd: String,
    run1_lineup_cd: String,
    run1_origin_event_id: String,
    run2_fld_cd: String,
    run2_lineup_cd: String,
    run2_origin_event_id: String,
    run3_fld_cd: String,
    run3_lineup_cd: String,
    run3_origin_event_id: String,
    run1_resp_cat_id: String,
    run2_resp_cat_id: String,
    run3_resp_cat_id: String,
    pa_ball_ct: u8,
    pa_called_ball_ct: u8,
    pa_intent_ball_ct: u8,
    pa_pitchout_ball_ct: u8,
    pa_hitbatter_ball_ct: u8,
    pa_other_ball_ct: u8,
    pa_strike_ct: u8,
    pa_called_strike_ct: u8,
    pa_swingmiss_strike_ct: u8,
    pa_foul_strike_ct: u8,
    pa_inplay_strike_ct: u8,
    pa_other_strike_ct: u8,
    event_runs_ct: u8,
    fld_id: String,
    base2_force_fl: bool,
    base3_force_fl: bool,
    base4_force_fl: bool,
    bat_safe_err_fl: bool,
    bat_fate_id: String,
    run1_fate_id: String,
    run2_fate_id: String,
    run3_fate_id: String,
    fate_runs_ct: u8,
    ass6_fld_cd: String,
    ass7_fld_cd: String,
    ass8_fld_cd: String,
    ass9_fld_cd: String,
    ass10_fld_cd: String,
    unknown_out_exc_fl: bool,
    uncertain_play_exc_fl: bool,
}
